[
  {
    "name": "Program data",
    "type": "generic",
    "readerSql": "SELECT p.program_id, p.name AS `program_name`, cn_outcome.name AS `program_outcome` FROM program p INNER JOIN concept c ON c.concept_id = p.outcomes_concept_id AND c.retired IS FALSE AND p.retired IS FALSE INNER JOIN concept_set cs ON cs.concept_set = c.concept_id LEFT OUTER JOIN concept_name cn_cs ON cn_cs.concept_id = cs.concept_set AND cn_cs.concept_name_type = 'FULLY_SPECIFIED' AND cn_cs.voided IS FALSE LEFT OUTER JOIN concept_name cn_outcome ON cn_outcome.concept_id = cs.concept_id AND cn_outcome.concept_name_type = 'FULLY_SPECIFIED' AND cn_outcome.voided IS FALSE",
    "chunkSizeToRead": "500",
    "tableName": "program_outcomes",
    "columnsToIgnore": []
  },
  {
    "name": "Patient program data",
    "type": "generic",
    "readerSql": "SELECT pp.patient_id, pp.program_id, epp.episode_id, pp.patient_program_id, pp.date_enrolled, pp.date_completed, pp.location_id, l.name AS location_name, cn_outcome.name AS outcome_name, pp.creator, pp.date_created, pp.date_changed, pp.changed_by FROM patient_program pp INNER JOIN episode_patient_program epp ON epp.patient_program_id = pp.patient_program_id AND pp.voided IS FALSE LEFT OUTER JOIN concept_name cn_outcome ON cn_outcome.concept_id = pp.outcome_concept_id AND cn_outcome.concept_name_type = 'FULLY_SPECIFIED' LEFT OUTER JOIN location l ON l.location_id = pp.location_id AND l.retired IS FALSE",
    "chunkSizeToRead": "500",
    "tableName": "patient_program_data"
  },
  {
    "name": "Person details",
    "type": "generic",
    "readerSql": "SELECT p.person_id, pn.person_name_id, pn.preferred, pn.prefix, pn.given_name, pn.middle_name, pn.family_name_prefix, pn.family_name, pn.family_name2, pn.family_name_suffix, p.gender, p.birthdate, p.birthtime, p.birthdate_estimated, p.dead, p.death_date, p.deathdate_estimated, p.cause_of_death FROM person p INNER JOIN person_name pn ON p.person_id = pn.person_id AND p.voided IS FALSE AND pn.voided IS FALSE",
    "chunkSizeToRead": "500",
    "tableName": "person_details"
  },
  {
    "name": "Person address",
    "type": "generic",
    "readerSql": "SELECT person_id, preferred, address1, address2, address3, address4, address5, address6, address7, address8, address9, address10, address11, address12, address13, address14, address15, city_village, state_province, postal_code, country, county_district, latitude, longitude, start_date, end_date FROM person_address",
    "chunkSizeToRead": "500",
    "tableName": "person_address"
  },
  {
    "name": "Address hierarchy levels",
    "type": "generic",
    "readerSql": "SELECT address_hierarchy_level_id, name, parent_level_id, address_field FROM address_hierarchy_level",
    "chunkSizeToRead": "500",
    "tableName": "address_hierarchy_level"
  },
  {
    "name": "Person information",
    "type": "generic",
    "readerSql": "SELECT p.person_id, pat.person_attribute_type_id, pat.name AS `person_attribute_name`, pat.description AS `person_attribute_description`, pa.value FROM person p INNER JOIN person_attribute pa ON pa.person_id = p.person_id AND p.voided IS FALSE AND pa.voided IS FALSE INNER JOIN person_attribute_type pat ON pat.person_attribute_type_id = pa.person_attribute_type_id AND pat.retired IS FALSE",
    "chunkSizeToRead": "500",
    "tableName": "person_information"
  },
  {
    "name": "Patient identification",
    "type": "generic",
    "readerSql": "SELECT pe.person_id, pa.patient_id, pi.identifier, pi.identifier_type, pi.preferred, pi.location_id, l.name AS `location_name`, pit.patient_identifier_type_id from person pe INNER JOIN patient pa ON pa.patient_id = pe.person_id AND pe.voided IS FALSE AND pa.voided IS FALSE INNER JOIN patient_identifier pi ON pi.patient_id = pa.patient_id AND pi.voided IS FALSE INNER JOIN patient_identifier_type pit ON pit.patient_identifier_type_id = pi.identifier_type AND pit.retired IS FALSE LEFT OUTER JOIN location l ON l.location_id = pi.location_id AND l.retired IS FALSE",
    "chunkSizeToRead": "500",
    "tableName": "patient_identifier"
  },
  {
    "name": "Patient allergy status",
    "type": "generic",
    "readerSql": "SELECT patient_id, allergy_status FROM patient",
    "chunkSizeToRead": "500",
    "tableName": "patient_allergy_status"
  },
  {
    "name": "Appointment service",
    "type": "generic",
    "readerSql": "SELECT appser.appointment_service_id, appser.name AS `service_name`, appser.description AS `service_description`, appser.start_time AS `service_start_time`, appser.end_time AS `service_end_time`, appser.max_appointments_limit AS `service_max_load`, appser.duration_mins AS `service_duration`, l.name AS `location_name`, ast.name AS `service_type`, ast.duration_mins AS `service_type_duration`, spec.name AS `speciality` FROM (SELECT appointment_service_id, name, description, start_time, end_time, max_appointments_limit, duration_mins, location_id, speciality_id, voided FROM appointment_service WHERE voided IS FALSE) appser LEFT OUTER JOIN appointment_service_type ast ON ast.appointment_service_id = appser.appointment_service_id AND ast.voided IS FALSE LEFT OUTER JOIN location l ON l.location_id = appser.location_id AND l.retired IS FALSE LEFT OUTER JOIN appointment_speciality spec ON spec.speciality_id = appser.speciality_id AND spec.voided IS FALSE",
    "chunkSizeToRead": "500",
    "tableName": "appointment_service"
  },
  {
    "name": "Appointment service availability",
    "type": "generic",
    "readerSql": "SELECT appser.appointment_service_id, appser.name AS `service_name`, l.name AS `service_location`, aswa.day_of_week AS `availability_day_of_week`, aswa.start_time AS `availability_start_time`, aswa.end_time AS `availability_end_time`, aswa.max_appointments_limit AS `availability_max_load` FROM (SELECT appointment_service_id, name, location_id, voided FROM appointment_service WHERE voided IS FALSE) appser LEFT OUTER JOIN appointment_service_weekly_availability aswa ON aswa.service_id = appser.appointment_service_id AND aswa.voided IS FALSE LEFT OUTER JOIN location l ON l.location_id = appser.location_id AND l.retired IS FALSE",
    "chunkSizeToRead": "500",
    "tableName": "service_availability"
  },
  {
    "name": "Appointment speciality",
    "type": "generic",
    "readerSql": "SELECT speciality_id, name AS `speciality` FROM appointment_speciality",
    "chunkSizeToRead": "500",
    "tableName": "appointment_speciality"
  },
  {
    "name": "Patient appointment",
    "type": "generic",
    "readerSql": "SELECT pa.patient_id, pa.patient_appointment_id AS `appointment_id`, prov.provider_name AS `appointment_provider`, pa.start_date_time AS `appointment_start_time`, pa.end_date_time AS `appointment_end_time`, aspec.name AS `appointment_speciality`, appser.name AS `appointment_service`, ast.name AS `appointment_service_type`, pa.status AS `appointment_status`, l.name AS `appointment_location`, pa.appointment_kind, pa.comments FROM patient_appointment pa INNER JOIN appointment_service appser ON appser.appointment_service_id = pa.appointment_service_id AND pa.voided IS FALSE AND appser.voided IS FALSE LEFT OUTER JOIN appointment_speciality aspec ON aspec.speciality_id = appser.speciality_id AND aspec.voided IS FALSE LEFT OUTER JOIN appointment_service_type ast ON ast.appointment_service_type_id = pa.appointment_service_type_id AND ast.voided IS FALSE LEFT OUTER JOIN location l ON l.location_id = pa.location_id AND l.retired IS FALSE LEFT OUTER JOIN (SELECT p.provider_id, CONCAT_WS(' ', pn.given_name, pn.middle_name, pn.family_name_prefix, pn.family_name, pn.family_name_suffix) AS `provider_name` from provider p INNER JOIN person_name pn ON pn.person_id = p.person_id AND pn.voided IS FALSE AND p.retired IS FALSE) AS prov ON prov.provider_id = pa.provider_id",
    "chunkSizeToRead": "500",
    "tableName": "patient_appointment"
  },
  {
    "name": "Patient Visit Details",
    "type": "generic",
    "readerSql": "SELECT visit_id, patient.patient_id AS patient_id, visit.visit_type_id AS visit_type_id, vt.name AS visit_type_name, vt.description AS visit_type_description, date_started AS visit_start_date, date_stopped AS visit_end_date, indication_concept_id, visit.location_id AS location_id, location.name AS location_name FROM patient INNER JOIN visit on patient.patient_id = visit.patient_id AND patient.voided is FALSE AND visit.voided IS FALSE INNER JOIN visit_type vt ON visit.visit_type_id = vt.visit_type_id AND vt.retired IS FALSE INNER JOIN location ON visit.location_id = location.location_id AND location.retired IS FALSE",
    "chunkSizeToRead": "500",
    "tableName": "patient_visit_details"
  },
  {
    "name": "Patient Encounter Details",
    "type": "generic",
    "readerSql": "SELECT patient.patient_id, visit_id, encounter_id, et.encounter_type_id AS encounter_type_id, et.name AS encounter_type_name, et.description AS encounter_type_description, et.edit_privilege AS edit_privilege, et.view_privilege AS view_privilege, location_id, form_id, encounter_datetime FROM patient INNER JOIN encounter ON patient.patient_id = encounter.patient_id AND patient.voided IS FALSE INNER JOIN encounter_type et ON encounter.encounter_type = et.encounter_type_id AND encounter.voided IS FALSE AND et.retired IS FALSE",
    "chunkSizeToRead": "500",
    "tableName": "patient_encounter_details"
  },
  {
    "name": "Encounter Provider and Role",
    "type": "generic",
    "readerSql": "SELECT ep.encounter_provider_id as encounter_provider_id, ep.encounter_id as encounter_id, ep.provider_id as provider_id, er.encounter_role_id as encounter_role_id, er.name as encounter_role_name, er.description as encounter_role_description from encounter_provider ep INNER JOIN encounter_role er on ep.encounter_role_id = er.encounter_role_id AND ep.voided IS FALSE AND er.retired IS FALSE",
    "chunkSizeToRead": "500",
    "tableName": "encounter_provider_and_role"
  },
  {
    "name": "Provider",
    "type": "generic",
    "readerSql": "SELECT provider_id, person_id, name, identifier, provider_role_id from provider WHERE provider.retired IS FALSE",
    "chunkSizeToRead": "500",
    "tableName": "provider"
  },
  {
    "name": "Location",
    "type": "generic",
    "readerSql": "SELECT location_id, name, description, address1, address2, address3, address4, address5, address6, address7, address8, address9, address10, address11, address12, address13, address14,  address15, city_village, state_province, postal_code, country, latitude, longitude, county_district, parent_location from location WHERE retired IS FALSE",
    "chunkSizeToRead": "500",
    "tableName": "location"
  },
  {
    "name": "Location Tag Map",
    "type": "generic",
    "readerSql": "SELECT ltm.location_id as location_id, lt.location_tag_id as location_tag_id, lt.name as location_tag_name, lt.description as location_tag_description from location_tag_map ltm INNER JOIN location_tag lt on ltm.location_tag_id = lt.location_tag_id AND lt.retired IS FALSE",
    "chunkSizeToRead": "500",
    "tableName": "location_tag_map"
  },
  {
    "name": "Location Attribute Details",
    "type": "generic",
    "readerSql": "SELECT location_attribute_id, location_id, lat.location_attribute_type_id as attribute_type_id, la.value_reference as value_reference, lat.name as location_attribute_type_name, lat.description as location_attribute_type_description, lat.datatype as location_attribute_type_datatype, lat.datatype_config as location_attribute_type_datatype_config, lat.preferred_handler as location_attribute_type_preferred_handler, lat.handler_config as location_attribute_type_handler_config, lat.min_occurs as location_attribute_type_min_occurs, lat.max_occurs as location_attribute_type_max_occurs from location_attribute la INNER JOIN location_attribute_type lat on la.attribute_type_id = lat.location_attribute_type_id AND la.voided IS FALSE AND lat.retired IS FALSE",
    "chunkSizeToRead": "500",
    "tableName": "location_attribute_details"
  },
  {
    "name": "Visit Attribute Details",
    "type": "generic",
    "readerSql": "SELECT va.visit_id AS visit_id, va.visit_attribute_id AS visit_attribute_id, va.value_reference AS value_reference, vat.visit_attribute_type_id AS visit_attribute_type_id, vat.name AS visit_attribute_type_name, vat.description AS visit_attribute_type_description, vat.datatype AS visit_attribute_type_datatype, vat.datatype_config AS visit_attribute_type_datatype_config, vat.preferred_handler AS visit_attribute_type_preferred_handler, vat.handler_config AS visit_attribute_type_handler_config, vat.min_occurs AS visit_attribute_type_min_occurs, vat.max_occurs AS visit_attribute_type_max_occurs FROM visit INNER JOIN visit_attribute va on visit.visit_id = va.visit_id AND visit.voided is FALSE INNER JOIN visit_attribute_type vat ON va.attribute_type_id = vat.visit_attribute_type_id AND va.voided IS FALSE AND vat.retired IS FALSE",
    "chunkSizeToRead": "500",
    "tableName": "visit_attribute_details"
  },
  {
    "name": "Provider Attribute Details",
    "type": "generic",
    "readerSql": "SELECT pa.provider_attribute_id AS provider_attribute_id, pat.provider_attribute_type_id AS attribute_type_id, pa.provider_id AS provider_id, pa.value_reference AS value_reference, pat.name AS provider_attribute_type_name, pat.description AS provider_attribute_type_description, pat.datatype AS provider_attribute_datatype, pat.datatype_config AS provider_attribute_datatype_config, pat.preferred_handler AS provider_attribute_type_preferred_handler, pat.handler_config AS provider_attribute_type_handler_config, pat.min_occurs AS provider_attribute_type_min_occurs, pat.max_occurs AS provider_attribute_type_max_occurs FROM provider INNER JOIN provider_attribute pa on provider.provider_id = pa.provider_id AND provider.retired IS FALSE INNER JOIN provider_attribute_type pat ON pa.attribute_type_id = pat.provider_attribute_type_id AND pa.voided IS FALSE AND pat.retired IS FALSE",
    "chunkSizeToRead": "500",
    "tableName": "provider_attribute_details"
  },
  {
    "name": "Person Attributes",
    "type": "eav",
    "chunkSizeToRead": "500",
    "tableName": "person_attributes",
    "eavAttributes": {
      "attributeTypeTableName": "person_attribute_type",
      "attributeTableName": "person_attribute",
      "valueTableJoiningId": "person_attribute_type_id",
      "typeTableJoiningId": "person_attribute_type_id",
      "valueColumnName": "value",
      "primaryKey": "person_id"
    }
  },
  {
    "name": "Visit Attributes",
    "type": "eav",
    "chunkSizeToRead": "500",
    "tableName": "visit_attributes",
    "eavAttributes": {
      "attributeTypeTableName": "visit_attribute_type",
      "attributeTableName": "visit_attribute",
      "valueTableJoiningId": "attribute_type_id",
      "typeTableJoiningId": "visit_attribute_type_id",
      "valueColumnName": "value_reference",
      "primaryKey": "visit_id"
    }
  },
  {
    "name": "Provider Attributes",
    "type": "eav",
    "chunkSizeToRead": "500",
    "tableName": "provider_attributes",
    "eavAttributes": {
      "attributeTypeTableName": "provider_attribute_type",
      "attributeTableName": "provider_attribute",
      "valueTableJoiningId": "attribute_type_id",
      "typeTableJoiningId": "provider_attribute_type_id",
      "valueColumnName": "value_reference",
      "primaryKey": "provider_id"
    }
  },
  {
    "name": "Obs Data",
    "type": "obs",
    "separateTables": [
      "PA, Location of Assessment",
      "SMH, Pain Assessment",
      "FV, Outcomes FV"
    ],
    "conceptReferenceSource": "MSF-INTERNAL",
    "columnsToIgnore": [
      "Video",
      "Image",
      "Documents, Image Upload",
      "Radiology Documents"
    ]
  }
]
